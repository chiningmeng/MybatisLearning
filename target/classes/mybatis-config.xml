<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        1.mybatis可以使用properties来引入外部properties配置文件的内容
        resource 引入类路径下的资源
        url 引入网络路径或磁盘路径下的资源
        （了解即可，一般都交给spring处理）
    -->
    <properties resource="dbconfig.properties"></properties>
    <!--
        2.settings包含很多重要的设置项
        setting:用来设置每一个设置项
            name : 设置项名
            value : 设置取值
    -->
    <settings>
        <!--是否开启驼峰命名自动映射,默认为false-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
    </settings>
    <!--
        3.typeAliases : 别名处理器，可以为我们的Java类型起别名
            注：别名不区分大小写
    -->
    <typeAliases>
        <!--typeAlias 为某个Java类型起别名
                type: 指定要起别名的类型全类名; 在没有注解的情况下，会使用 Bean 的首字母小写的非限定类名来作为它的别名
        -->
        <!--<typeAlias type="bean.Employee" alias="employee"/>-->
        <!--也可以用 package 指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean
            name: 指定包名（为 当前包以及下面所有的后代包的每一个类起一个默认别名（原类名小写）
        -->
        <package name="bean"/>
    </typeAliases>
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <!--将写好的sql映射文件（EmployeeMapper.xml）注册到全局配置文件（本文件）中-->
        <mapper resource="mapper/EmployeeMapper.xml"/>
    </mappers>
</configuration>